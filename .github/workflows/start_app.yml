name: start_app

env:
  S3_BUCKET_NAME: recipe-s3-gj-481

on:
  workflow_dispatch:

jobs:
  start_recipes_application:
    runs-on: ubuntu-latest
    
    steps:
 
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-west-1
             
      - name: Clone repo into runner
        uses: actions/checkout@v3


      - name: Change directory to '/terraform' and initiate the directory
        run: |
          cd ./terraform
          terraform init
          
      - name: Check does s3 bucket created. If yes download terrafor state file, if no creates bucket
        run: 
          if aws s3api list-buckets --query "Buckets[].Name" | grep -w "${{env.S3_BUCKET_NAME}}";
          then
            echo "Dwnload state file";
            aws s3api get-object --bucket {{env.S3_BUCKET_NAME}} --key recipe_tf/terraform.tfstate terraform.tfstate;
            exit 0;
          else
            echo "Create s3 bucket";
            aws s3api create-bucket --bucket ${{env.S3_BUCKET_NAME}} --create-bucket-configuration LocationConstraint=us-west-1;
            echo "ON s3 bucket versioning";
            aws s3api put-bucket-versioning --bucket ${{env.S3_BUCKET_NAME}} --versioning-configuration Status=Enabled;
            echo "Configure s3 encryption";
            aws s3api put-bucket-encryption --bucket ${{env.S3_BUCKET_NAME}} --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}';
            exit 0;
          fi
        continue-on-error: true
        
      - name: Check file
        run: |
          cd ./terraform
          ls -la
